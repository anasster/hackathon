{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Panos\\\\Documents\\\\Programs\\\\my-app\\\\src\\\\DigitalIdentityApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\"; // Import CSS for the cropper\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalIdentityApp = () => {\n  _s();\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 30,\n    aspect: 1\n  });\n  const [sharpenedImageUrl, setSharpenedImageUrl] = useState(null);\n  const imageRef = useRef(null);\n  useEffect(() => {\n    // Reset image and sharpened image URL if uploadedImage changes\n    setSharpenedImageUrl(null);\n  }, [uploadedImage]);\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setUploadedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleImageLoaded = image => {\n    imageRef.current = image;\n  };\n  const handleCropChange = crop => {\n    setCrop(crop);\n  };\n  const handleApplySharpening = () => {\n    if (!imageRef.current) return;\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const img = imageRef.current;\n    const cropX = crop.x / 100 * img.width;\n    const cropY = crop.y / 100 * img.height;\n    const cropWidth = crop.width / 100 * img.width;\n    const cropHeight = crop.height / 100 * img.height;\n\n    // Resize canvas to match cropped area\n    canvas.width = cropWidth;\n    canvas.height = cropHeight;\n\n    // Draw the cropped image part onto canvas\n    ctx.drawImage(img, cropX, cropY, cropWidth, cropHeight, 0, 0, cropWidth, cropHeight);\n\n    // Apply a sharpening filter (basic example)\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n\n    // Apply a sharpening filter using a simple convolution matrix\n    const sharpenMatrix = [[-1, -1, -1], [-1, 9, -1], [-1, -1, -1]];\n    for (let i = 0; i < data.length; i += 4) {\n      let r = 0,\n        g = 0,\n        b = 0;\n      for (let dx = -1; dx <= 1; dx++) {\n        for (let dy = -1; dy <= 1; dy++) {\n          const x = Math.min(Math.max(i / 4 % canvas.width + dx, 0), canvas.width - 1);\n          const y = Math.min(Math.max(Math.floor(i / 4 / canvas.width) + dy, 0), canvas.height - 1);\n          const pixelIndex = (y * canvas.width + x) * 4;\n          r += data[pixelIndex] * sharpenMatrix[dx + 1][dy + 1];\n          g += data[pixelIndex + 1] * sharpenMatrix[dx + 1][dy + 1];\n          b += data[pixelIndex + 2] * sharpenMatrix[dx + 1][dy + 1];\n        }\n      }\n\n      // Set new pixel values, making sure they are within bounds\n      data[i] = Math.min(Math.max(r, 0), 255);\n      data[i + 1] = Math.min(Math.max(g, 0), 255);\n      data[i + 2] = Math.min(Math.max(b, 0), 255);\n    }\n\n    // Put the sharpened data back to the canvas\n    ctx.putImageData(imageData, 0, 0);\n\n    // Generate sharpened image URL\n    const sharpenedImageUrl = canvas.toDataURL();\n    setSharpenedImageUrl(sharpenedImageUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Upload, Crop, and Sharpen Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".png, .jpeg, .jpg\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), uploadedImage && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: uploadedImage,\n      crop: crop,\n      onImageLoaded: handleImageLoaded,\n      onChange: handleCropChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), uploadedImage && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleApplySharpening,\n      className: \"bg-blue-700 text-white py-2 px-4 rounded-lg mt-4\",\n      children: \"Sharpen Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), sharpenedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sharpenedImageUrl,\n        alt: \"Sharpened\",\n        className: \"max-w-full h-auto rounded-lg shadow-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalIdentityApp, \"1hMrNuhslfkd8uWFEvK9KZP8PQg=\");\n_c = DigitalIdentityApp;\nexport default DigitalIdentityApp;\nvar _c;\n$RefreshReg$(_c, \"DigitalIdentityApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactCrop","jsxDEV","_jsxDEV","DigitalIdentityApp","_s","uploadedImage","setUploadedImage","crop","setCrop","unit","width","aspect","sharpenedImageUrl","setSharpenedImageUrl","imageRef","handleImageUpload","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleImageLoaded","image","current","handleCropChange","handleApplySharpening","canvas","document","createElement","ctx","getContext","img","cropX","x","cropY","y","height","cropWidth","cropHeight","drawImage","imageData","getImageData","data","sharpenMatrix","i","length","r","g","b","dx","dy","Math","min","max","floor","pixelIndex","putImageData","toDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","onImageLoaded","onClick","alt","_c","$RefreshReg$"],"sources":["C:/Users/Panos/Documents/Programs/my-app/src/DigitalIdentityApp.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\"; // Import CSS for the cropper\r\n\r\nconst DigitalIdentityApp = () => {\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n  const [crop, setCrop] = useState({ unit: \"%\", width: 30, aspect: 1 });\r\n  const [sharpenedImageUrl, setSharpenedImageUrl] = useState(null);\r\n  const imageRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Reset image and sharpened image URL if uploadedImage changes\r\n    setSharpenedImageUrl(null);\r\n  }, [uploadedImage]);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setUploadedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleImageLoaded = (image) => {\r\n    imageRef.current = image;\r\n  };\r\n\r\n  const handleCropChange = (crop) => {\r\n    setCrop(crop);\r\n  };\r\n\r\n  const handleApplySharpening = () => {\r\n    if (!imageRef.current) return;\r\n\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const img = imageRef.current;\r\n    const cropX = (crop.x / 100) * img.width;\r\n    const cropY = (crop.y / 100) * img.height;\r\n    const cropWidth = (crop.width / 100) * img.width;\r\n    const cropHeight = (crop.height / 100) * img.height;\r\n\r\n    // Resize canvas to match cropped area\r\n    canvas.width = cropWidth;\r\n    canvas.height = cropHeight;\r\n\r\n    // Draw the cropped image part onto canvas\r\n    ctx.drawImage(img, cropX, cropY, cropWidth, cropHeight, 0, 0, cropWidth, cropHeight);\r\n\r\n    // Apply a sharpening filter (basic example)\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const data = imageData.data;\r\n\r\n    // Apply a sharpening filter using a simple convolution matrix\r\n    const sharpenMatrix = [\r\n      [-1, -1, -1],\r\n      [-1,  9, -1],\r\n      [-1, -1, -1]\r\n    ];\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      let r = 0, g = 0, b = 0;\r\n\r\n      for (let dx = -1; dx <= 1; dx++) {\r\n        for (let dy = -1; dy <= 1; dy++) {\r\n          const x = Math.min(Math.max(i / 4 % canvas.width + dx, 0), canvas.width - 1);\r\n          const y = Math.min(Math.max(Math.floor(i / 4 / canvas.width) + dy, 0), canvas.height - 1);\r\n          const pixelIndex = (y * canvas.width + x) * 4;\r\n\r\n          r += data[pixelIndex] * sharpenMatrix[dx + 1][dy + 1];\r\n          g += data[pixelIndex + 1] * sharpenMatrix[dx + 1][dy + 1];\r\n          b += data[pixelIndex + 2] * sharpenMatrix[dx + 1][dy + 1];\r\n        }\r\n      }\r\n\r\n      // Set new pixel values, making sure they are within bounds\r\n      data[i] = Math.min(Math.max(r, 0), 255);\r\n      data[i + 1] = Math.min(Math.max(g, 0), 255);\r\n      data[i + 2] = Math.min(Math.max(b, 0), 255);\r\n    }\r\n\r\n    // Put the sharpened data back to the canvas\r\n    ctx.putImageData(imageData, 0, 0);\r\n\r\n    // Generate sharpened image URL\r\n    const sharpenedImageUrl = canvas.toDataURL();\r\n    setSharpenedImageUrl(sharpenedImageUrl);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen p-6\">\r\n      <h2 className=\"text-3xl font-bold text-center mb-6\">Upload, Crop, and Sharpen Image</h2>\r\n\r\n      {/* Image Upload Section */}\r\n      <div className=\"flex justify-center mb-4\">\r\n        <input type=\"file\" accept=\".png, .jpeg, .jpg\" onChange={handleImageUpload} />\r\n      </div>\r\n\r\n      {/* Image Cropper */}\r\n      {uploadedImage && (\r\n        <ReactCrop\r\n          src={uploadedImage}\r\n          crop={crop}\r\n          onImageLoaded={handleImageLoaded}\r\n          onChange={handleCropChange}\r\n        />\r\n      )}\r\n\r\n      {/* Apply Sharpening */}\r\n      {uploadedImage && (\r\n        <button\r\n          onClick={handleApplySharpening}\r\n          className=\"bg-blue-700 text-white py-2 px-4 rounded-lg mt-4\"\r\n        >\r\n          Sharpen Image\r\n        </button>\r\n      )}\r\n\r\n      {/* Display Sharpened Image */}\r\n      {sharpenedImageUrl && (\r\n        <div className=\"flex justify-center mt-6\">\r\n          <img src={sharpenedImageUrl} alt=\"Sharpened\" className=\"max-w-full h-auto rounded-lg shadow-md\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DigitalIdentityApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}